@model ProductOverviewModel
@using Nop.Core
@using Nop.Core.Domain.Catalog
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Models.Catalog;
@{
     //prepare "Add to cart" AJAX link
    string productIdForSending = "productId-" + Model.Id.ToString();
    string urlAction = Url.Action("AddProductToCart_Catalog_Weight", "ShoppingCart");
    string addtocartlink = "";
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    decimal quantity = 1;
    if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog");
    }

    else
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId });
    }
    string prodId = "productId-" + Model.Id.ToString();
    if (Model.BaseWeight.HasValue && Model.BaseWeight.Value > 0)
    {
        quantity = Math.Round(Model.BaseWeight.Value,2);//  Math.Round(item.Product.UnitPrice.Value).ToString("0.00", CultureInfo.InvariantCulture);
    }
    var addtowishlistlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist, quantity = quantity });
    var addtowishlistlinkWeight = Url.RouteUrl("AddProductToCart-Catalog");
    var addtocomparelink = Url.RouteUrl("AddProductToCompare", new { productId = Model.Id });

    string ajaxCartOnClick = "";
    if(Model.BaseWeight.HasValue && Model.BaseWeight.Value > 0)
    {
        //addtocartlink = Url.RouteUrl("AddProductToCart-Catalog_Weight", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId });
        //ajaxCartOnClick = "AjaxCart.addproducttocart_catalog_Weight(" + Model.Id.ToString() + ",1";
    }
    else
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId });
        ajaxCartOnClick = "AjaxCart.addproducttocart_catalog(";
    }




}
<div class="product-item" data-producb,?tid="@Model.Id">
    <div class="picture">
        <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" title="@Model.DefaultPictureModel.Title">
            <img alt="@Model.DefaultPictureModel.AlternateText" src="@Model.DefaultPictureModel.ImageUrl" title="@Model.DefaultPictureModel.Title" />
        </a>
    </div>
    <div class="details">
        <h2 class="product-title">
            <a href="@Url.RouteUrl("Product", new {SeName = Model.SeName})">@Model.Name</a>
        </h2>
        @if (EngineContext.Current.Resolve<CatalogSettings>().ShowSkuOnCatalogPages && !string.IsNullOrEmpty(Model.Sku))
        {
            <div class="sku">
                @Model.Sku
            </div>
        }
        @if (Model.ReviewOverviewModel.AllowCustomerReviews)
        {
            int ratingPercent = 0;
            if (Model.ReviewOverviewModel.TotalReviews != 0)
            {
                ratingPercent = ((Model.ReviewOverviewModel.RatingSum*100)/Model.ReviewOverviewModel.TotalReviews)/5;
            }
            @*<div class="product-rating-box" title="@string.Format(T("Reviews.TotalReviews").Text, Model.ReviewOverviewModel.TotalReviews)">
                <div class="rating">
                    <div style="width: @(ratingPercent)%">
                    </div>
                </div>
            </div>*@
        }
        <div class="description">
            @Html.Raw(Model.ShortDescription)
        </div>
        @*
        <!--<div class="choose-quantity">
            <div class="reduce-quantity">
                <a>-</a>
            </div>
            <div class="current-quantity">
                <span>1</span>
            </div>
            <div class="increase-quantity">
                <a>+</a>
            </div>
        </div>-->
        *@



    <div class="choose-quantity">
        <div class="reduce-quantity" onclick="reduceQuantity('@quantity', '@prodId')">
            <a>-</a>
        </div>
        <div class="current-quantity">
            <div class="buttons">
                @*<input type="button" value="@T("Products.Details")" class="button-1 product-box-detail-button" onclick="setLocation('@Url.RouteUrl("Product", new { SeName = Model.SeName })')" />*@
                @if (!Model.ProductPrice.DisableBuyButton)
                {
                    var addToCartText = T("ShoppingCart.AddToCart").Text;
                    if (Model.ProductPrice.IsRental)
                    {
                        addToCartText = T("ShoppingCart.Rent").Text;
                    }
                    if (Model.ProductPrice.AvailableForPreOrder)
                    {
                        addToCartText = T("ShoppingCart.PreOrder").Text;
                    }

                    @*<input class="qty-input valid" data-val="true" data-val-number="The field כמות must be a number." id="@prodId" name="@prodId" type="text" value="@quantity"    disabled>*@
                    <div class="weight-quant-cont">
                        <span class="qty-input valid weight-value" id="@prodId" name="@prodId">@quantity</span>
                        <span class="weight-value">@Model.WeightUnit</span>
                    </div>
                 <input type="button" value="@(addToCartText)" class="button-2 product-box-add-to-cart-button" onclick="AjaxCart.addproducttocart_catalog_Weight('@productIdForSending','@Url.Action("AddProductToCart_Catalog_Weight", "ShoppingCart")'); return false;" />
                  

                    
                    @*<input type="button" id="add-to-cart-button-@Model.ProductId" class="button-1 add-to-cart-button" value="@addToCartText" data-productid="@Model.ProductId" onclick="AjaxCart.addproducttocart_details('@Url.RouteUrl("AddProductToCart-Details", new { productId = Model.ProductId, shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart })', '#product-details-form');return false;" />*@
                }
                @if (!Model.ProductPrice.DisableAddToCompareListButton)
                {
                    <input type="button" value="@T("ShoppingCart.AddToCompareList")" title="@T("ShoppingCart.AddToCompareList")" class="button-2 add-to-compare-list-button" onclick="AjaxCart.addproducttocomparelist('@addtocomparelink');return false;" />
                }
                @if (!Model.ProductPrice.DisableWishlistButton)
                {
                    <input type="button" value="@T("ShoppingCart.AddToWishlist")" title="@T("ShoppingCart.AddToWishlist")" class="button-2 add-to-wishlist-button" onclick="AjaxCart.addproducttocart_catalog('@addtowishlistlink');return false;" />
                }
            </div>
        </div>
        <div class="increase-quantity" onclick="increaseQuantity('@quantity', '@prodId')">
            <a>+</a>
        </div>
    </div>



        <div class="add-info">
            @Html.Widget("productbox_addinfo_before", Model.Id)
            <div class="prices">
                @if (!String.IsNullOrEmpty(Model.ProductPrice.OldPrice))
                {
                    <span class="price old-price">@Model.ProductPrice.OldPrice</span>
                }
                <span class="price actual-price">@Model.ProductPrice.Price</span>
                @if (Model.ProductPrice.DisplayTaxShippingInfo)
                {
                    var inclTax = EngineContext.Current.Resolve<IWorkContext>().TaxDisplayType == TaxDisplayType.IncludingTax;
                    //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                    //of course, you can modify appropriate locales to include VAT info there
                    <span class="tax-shipping-info">
                        @T(inclTax ? "Products.Price.TaxShipping.InclTax" : "Products.Price.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                    </span>
                }
                @if (!String.IsNullOrEmpty(Model.ProductPrice.BasePricePAngV))
                {
                    <div class="base-price-pangv">
                        @Model.ProductPrice.BasePricePAngV
                    </div>
                }
            </div>
            @Html.Widget("productbox_addinfo_middle", Model.Id)
            @Html.Widget("productbox_addinfo_after", Model.Id)
        </div>
    </div>
</div>